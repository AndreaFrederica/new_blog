---
import type { CollectionEntry } from "astro:content";
import { getRealSlug } from "@utils/content-utils";
import { getPostUrl } from "@utils/i18n-utils";
import type { Page } from "astro";
import { siteConfig } from "@/config";
import PostCard from "./PostCard.astro";

interface Props {
	page: Page<
		CollectionEntry<"posts"> & { isFallback?: boolean; originalLang?: string }
	>;
	lang?: string;
}

const { page, lang } = Astro.props;
const currentLang =
	lang || siteConfig.defaultLang || siteConfig.lang || "zh_cn";

let delay = 0;
const interval = 50;

// 主页渲染阶段：尊重目录生成的真实 slug，并在发现 frontmatter.slug 冲突时给出警告
const preparedList = page.data.map((entry: CollectionEntry<"posts">) => {
	const realSlug = getRealSlug(entry);
	if (entry.data.slug && entry.data.slug !== realSlug) {
		console.warn(`⚠️  [HOMEPAGE SLUG MISMATCH] File: ${entry.id}`);
		console.warn(`   Expected slug: "${realSlug}" (based on directory path)`);
		console.warn(`   Found slug: "${entry.data.slug}" (in frontmatter)`);
		console.warn(`   Using real path: "${realSlug}"`);
		console.warn("");
	}
	const url = getPostUrl(realSlug, currentLang);
	return { entry, url };
});
---
<div class="transition flex flex-col bg-[var(--card-bg)] py-1 md:py-0 md:bg-transparent md:gap-4 mb-4">
    {preparedList.map(({ entry, url }) => (
        <PostCard
                entry={entry}
                title={entry.data.title}
                tags={entry.data.tags}
                category={entry.data.category}
                published={entry.data.published}
                updated={entry.data.updated}
                url={url}
                image={entry.data.image}
                description={entry.data.description}
                draft={entry.data.draft}
                lang={currentLang}
                class:list="onload-animation"
                style={`animation-delay: calc(var(--content-delay) + ${delay++ * interval}ms);`}
        ></PostCard>
    ))}
</div>