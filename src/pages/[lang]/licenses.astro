---
import { type CollectionEntry, getEntry, render } from "astro:content";
import Markdown from "@components/misc/Markdown.astro";
import { isSupportedLanguage } from "@utils/i18n-utils";
import { siteConfig } from "../../config";
import I18nKey from "../../i18n/i18nKey";
import { i18n } from "../../i18n/translation";
import MainGridLayout from "../../layouts/MainGridLayout.astro";
import { getLicenseName, licenses } from "../../licenses";

export async function getStaticPaths() {
	const supportedLangs = siteConfig.supportedLangs || ["en"];
	const defaultLang = siteConfig.defaultLang || siteConfig.lang || "zh_cn";
	return supportedLangs
		.filter((lang) => lang !== defaultLang)
		.map((lang) => ({ params: { lang }, props: { lang } }));
}

const { lang } = Astro.params;
if (!isSupportedLanguage(lang)) {
	return Astro.redirect("/404");
}

let licensePost: CollectionEntry<"spec"> | undefined;
try {
	// try language-specific spec: license_{lang}.md
	licensePost = await getEntry("spec", `license_${lang}`);
	if (!licensePost) {
		licensePost = await getEntry("spec", "license");
	}
} catch {
	licensePost = await getEntry("spec", "license");
}

const Content = licensePost ? (await render(licensePost)).Content : undefined;
---
<MainGridLayout title={i18n(I18nKey.licenses, lang)} description={i18n(I18nKey.licenses, lang)} lang={lang}>
  <div class="flex w-full overflow-hidden relative min-h-32">
    <div class="card-base z-10 px-9 py-6 relative w-full">
      <Markdown class="mt-2">
        {Content && <Content />}
      </Markdown>
      
      <div class="mt-8">
        <h2 class="text-2xl font-bold mb-4 text-neutral-900 dark:text-neutral-100">{i18n(I18nKey.availableLicenses, lang)}</h2>
        <div class="grid gap-4 md:grid-cols-2 lg:grid-cols-3">
          {licenses.map((license) => (
            <div class="border border-gray-200 dark:border-gray-700 rounded-lg p-4 hover:bg-gray-50 dark:hover:bg-gray-800 transition-colors">
              <h3 class="font-semibold text-lg mb-2">
                <a href={license.url} class="text-blue-600 dark:text-blue-400 hover:underline">
                  {getLicenseName(license.id, lang)}
                </a>
              </h3>
              <p class="text-sm text-gray-600 dark:text-gray-400">
                ID: {license.id}
              </p>
              {license.doc && (
                <p class="text-xs text-gray-500 dark:text-gray-500 mt-1">
                  {i18n(I18nKey.containsDetailedDocumentation, lang)}
                </p>
              )}
            </div>
          ))}
        </div>
      </div>
    </div>
  </div>
</MainGridLayout>

