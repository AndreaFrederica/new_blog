---
import { getCollection } from "astro:content";
import { isSupportedLanguage } from "@utils/i18n-utils";
import ArchivePanel from "../../components/ArchivePanel.svelte";
import { siteConfig } from "../../config";
import I18nKey from "../../i18n/i18nKey";
import { i18n } from "../../i18n/translation";
import MainGridLayout from "../../layouts/MainGridLayout.astro";
import { getSortedPostsByLanguage } from "../../utils/content-utils";

export async function getStaticPaths() {
	const supportedLangs = siteConfig.supportedLangs || ["en"];
	const defaultLang = siteConfig.defaultLang || siteConfig.lang || "zh_cn";

	const paths = [];

	for (const lang of supportedLangs) {
		if (lang === defaultLang) continue; // 默认语言使用根路径

		// 获取该语言的文章
		const posts = await getSortedPostsByLanguage(lang);

		paths.push({
			params: { lang },
			props: { lang, posts },
		});
	}

	return paths;
}

const { lang, posts } = Astro.props;
const { lang: langParam } = Astro.params;

// 验证语言参数
if (!isSupportedLanguage(langParam)) {
	return Astro.redirect("/404");
}
// fetch notes of current language
let notes = await getCollection("notes", ({ data }) =>
	import.meta.env.PROD ? data.draft !== true : true,
);
notes = notes.filter(
	(n) =>
		(n.data.lang || siteConfig.defaultLang || siteConfig.lang || "zh_cn") ===
		langParam,
);

const notesList = notes.map((n) => ({
	slug: n.slug,
	data: {
		title: n.data.title,
		tags: n.data.tags || [],
		category: n.data.category,
		published: n.data.published,
	},
	href: `/notes/${n.slug}`,
}));

type ListItem = {
	slug: string;
	data: {
		title: string;
		tags?: string[];
		category?: string | null;
		published?: Date;
	} & Record<string, unknown>;
	href?: string;
};
const merged: ListItem[] = [
	...posts.map((p) => ({
		slug: p.slug,
		data: p.data as unknown as ListItem["data"],
		href: undefined,
	})),
	...notesList,
].sort(
	(a, b) =>
		(b.data.published ? new Date(b.data.published).getTime() : 0) -
		(a.data.published ? new Date(a.data.published).getTime() : 0),
);
---

<MainGridLayout title={i18n(I18nKey.archive, langParam)} description={i18n(I18nKey.archive, langParam)} lang={langParam} scope="all">
    <div class="flex w-full rounded-[var(--radius-large)] overflow-hidden relative">
        <div class="card-base z-10 px-6 md:px-9 py-8 relative w-full">
            <ArchivePanel sortedPosts={merged} lang={langParam} client:load />
        </div>
    </div>
</MainGridLayout>
