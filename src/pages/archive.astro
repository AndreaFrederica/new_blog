---
import { getCollection } from "astro:content";
import ArchivePanel from "@components/ArchivePanel.svelte";
import I18nKey from "@i18n/i18nKey";
import { i18n } from "@i18n/translation";
import MainGridLayout from "@layouts/MainGridLayout.astro";
import { getPostUrl } from "@utils/i18n-utils";
import { siteConfig } from "../config";
import {
	getNotesByLanguage,
	getRealSlug,
	getSortedPostsListByLanguage,
} from "../utils/content-utils";
import { extractLangFromUrl } from "../utils/i18n-utils";

// 从当前URL提取语言，如果没有则使用默认语言
const currentLang = extractLangFromUrl(Astro.url.pathname);
const sortedPostsList = await getSortedPostsListByLanguage(currentLang);
// fetch notes of current language
const notes = await getNotesByLanguage(currentLang);

const notesList = notes.map((n) => ({
	slug: n.slug,
	data: {
		title: n.data.title,
		tags: n.data.tags || [],
		category: n.data.category,
		published: n.data.published,
	},
	href: `/notes/${n.slug}`,
}));

// merge posts + notes, then sort by published desc
const merged = [
	...sortedPostsList.map((p) => {
		// p here is PostForList (slug,data). We need to warn and convert slug to realSlug by directory.
		// Since PostForList lacks id, getRealSlug can't be called; but our getSortedPostsListByLanguage was updated to use getRealSlug already.
		// Still, warn if p.data.slug exists and differs.
		if (p.data.slug && p.data.slug !== p.slug) {
			console.warn(
				`⚠️  [ARCHIVE SLUG MISMATCH] Expected slug: "${p.slug}" (dir) but frontmatter has "${p.data.slug}"`,
			);
		}
		return {
			slug: p.slug,
			data: p.data,
			href: getPostUrl(p.slug, currentLang),
		};
	}),
	...notesList,
].sort((a, b) => {
	const dateA = a.data.published ? new Date(a.data.published).getTime() : 0;
	const dateB = b.data.published ? new Date(b.data.published).getTime() : 0;
	return dateB - dateA;
});
---

<MainGridLayout title={i18n(I18nKey.archive, currentLang)} lang={currentLang} scope="all">
    <ArchivePanel sortedPosts={merged} lang={currentLang} client:only="svelte"></ArchivePanel>
</MainGridLayout>

